{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\91870\\\\Downloads\\\\react-store-app-master\\\\react-store-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\91870\\\\Downloads\\\\react-store-app-master\\\\react-store-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\91870\\\\Downloads\\\\react-store-app-master\\\\react-store-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\91870\\\\Downloads\\\\react-store-app-master\\\\react-store-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\91870\\\\Downloads\\\\react-store-app-master\\\\react-store-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\91870\\\\Downloads\\\\react-store-app-master\\\\react-store-app-master\\\\src\\\\components\\\\Cart\\\\PayPalButton.js\";\nimport React from \"react\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\n\nvar MyApp = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyApp, _React$Component);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var onSuccess = function onSuccess(payment) {\n        _this.props.clearCart();\n\n        _this.props.history.push(\"/\");\n\n        console.log(\"The payment was succeeded!\", payment);\n      };\n\n      var onCancel = function onCancel(data) {\n        // User pressed \"cancel\" or close Paypal's popup!\n        console.log(\"The payment was cancelled!\", data); // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n      };\n\n      var onError = function onError(err) {\n        // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n        console.log(\"Error!\", err); // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n        // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n      };\n\n      var env = \"sandbox\"; // you can set here to 'production' for production\n\n      var currency = \"INR\"; // or you can set this value from your props or state\n\n      var total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n      // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n      var client = {\n        sandbox: process.env.AbPpwxH1uecnkRugeCdNTbzWakLtamtCfIeqeZ3Hh2CyEln2dFo9XyS1fmNCEPIgEgfzMwhudN1ok6BF,\n        production: \"YOUR-PRODUCTION-APP-ID\"\n      }; // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n\n      return /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n        env: env,\n        client: client,\n        currency: currency,\n        total: this.props.total,\n        onError: onError,\n        onSuccess: onSuccess,\n        onCancel: onCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return MyApp;\n}(React.Component);\n\nexport { MyApp as default };","map":{"version":3,"sources":["C:/Users/91870/Downloads/react-store-app-master/react-store-app-master/src/components/Cart/PayPalButton.js"],"names":["React","PaypalExpressBtn","MyApp","onSuccess","payment","props","clearCart","history","push","console","log","onCancel","data","onError","err","env","currency","total","client","sandbox","process","AbPpwxH1uecnkRugeCdNTbzWakLtamtCfIeqeZ3Hh2CyEln2dFo9XyS1fmNCEPIgEgfzMwhudN1ok6BF","production","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;IAEqBC,K;;;;;;;;;;;6BACV;AAAA;;AACP,UAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO,EAAI;AAC3B,QAAA,KAAI,CAACC,KAAL,CAAWC,SAAX;;AACA,QAAA,KAAI,CAACD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CN,OAA1C;AACD,OAJD;;AAMA,UAAMO,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACvB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CE,IAA1C,EAFuB,CAGvB;AACD,OAJD;;AAMA,UAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG,EAAI;AACrB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,GAAtB,EAFqB,CAGrB;AACA;AACD,OALD;;AAOA,UAAIC,GAAG,GAAG,SAAV,CApBO,CAoBc;;AACrB,UAAIC,QAAQ,GAAG,KAAf,CArBO,CAqBe;;AACtB,UAAIC,KAAK,GAAG,CAAZ,CAtBO,CAsBQ;AACf;;AAEA,UAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAEC,OAAO,CAACL,GAAR,CAAYM,gFADR;AAEbC,QAAAA,UAAU,EAAE;AAFC,OAAf,CAzBO,CA6BR;;AACC,0BACE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAEP,GADP;AAEE,QAAA,MAAM,EAAEG,MAFV;AAGE,QAAA,QAAQ,EAAEF,QAHZ;AAIE,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,KAJpB;AAKE,QAAA,OAAO,EAAEJ,OALX;AAME,QAAA,SAAS,EAAEV,SANb;AAOE,QAAA,QAAQ,EAAEQ,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EA1CgCX,KAAK,CAACuB,S;;SAApBrB,K","sourcesContent":["import React from \"react\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\n\nexport default class MyApp extends React.Component {\n  render() {\n    const onSuccess = payment => {\n      this.props.clearCart();\n      this.props.history.push(\"/\");\n      console.log(\"The payment was succeeded!\", payment);\n    };\n\n    const onCancel = data => {\n      // User pressed \"cancel\" or close Paypal's popup!\n      console.log(\"The payment was cancelled!\", data);\n      // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onError = err => {\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n      console.log(\"Error!\", err);\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n    };\n\n    let env = \"sandbox\"; // you can set here to 'production' for production\n    let currency = \"INR\"; // or you can set this value from your props or state\n    let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n    const client = {\n      sandbox: process.env.AbPpwxH1uecnkRugeCdNTbzWakLtamtCfIeqeZ3Hh2CyEln2dFo9XyS1fmNCEPIgEgfzMwhudN1ok6BF,\n      production: \"YOUR-PRODUCTION-APP-ID\"\n    };\n   // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n    return (\n      <PaypalExpressBtn\n        env={env}\n        client={client}\n        currency={currency}\n        total={this.props.total}\n        onError={onError}\n        onSuccess={onSuccess}\n        onCancel={onCancel}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}